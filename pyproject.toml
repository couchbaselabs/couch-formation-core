[tool.poetry]
name = "couchformation"
description = "Couchbase Cloud Automation"
version = "4.0.0a390"
readme = "README.md"
authors = ["Michael Minichino <info@unix.us.com>"]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: Apache Software License",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
keywords = ["couchbase", "devops", "automation"]
packages = [
    { include = "couchformation" }
]
include = [
    { path = "couchformation/data/*.yaml", format = ["sdist", "wheel"] }
]

[tool.poetry.urls]
"Homepage" = "https://github.com/couchbaselabs/couch-formation-core"
"Changelog" = "https://github.com/couchbaselabs/couch-formation-core/blob/main/CHANGELOG.md"

[tool.poetry.scripts]
cloudmgr = "couchformation.cli.cloudmgr:main"
dbdump = "couchformation.cli.dbdump:main"

[[tool.poetry.source]]
name = "pypi-public"
url = "https://pypi.org/simple/"

[tool.poetry.dependencies]
python = ">=3.8,<4"
attrs = ">=23.1.0"
boto3 = ">=1.34.17"
botocore = ">=1.34.17"
cryptography = ">=42.0.7"
dnspython = ">=2.1.0"
google-api-core = ">=2.4.0"
google-api-python-client = ">=2.34.0"
google-auth = ">=2.3.3"
google-auth-httplib2 = ">=0.1.0"
googleapis-common-protos = ">=1.54.0"
google-cloud = ">=0.34.0"
google-cloud-compute = ">=1.6.1"
google-cloud-storage = ">=2.10.0"
google-cloud-dns = ">=0.35.0"
google-cloud-network-management = ">=1.5.4"
Jinja2 = ">=3.0.0"
passlib = ">=1.7.4"
pycryptodome = ">=3.20.0"
pytz = ">=2021.3"
pyvmomi = ">=8.0.0.1.1"
requests = ">=2.31.0"
urllib3 = ">=1.26.16"
azure-common = ">=1.1.28"
azure-core = ">=1.29.6"
azure-mgmt-resource = ">=23.1.1"
azure-identity = ">=1.12.0"
azure-mgmt-network = ">=25.3.0"
azure-mgmt-compute = ">=31.0.0"
azure-mgmt-core = ">=1.4.0"
azure-mgmt-dns = ">=8.1.0"
azure-mgmt-privatedns = ">=1.1.0"
ply = ">=3.11"
sqlite-utils = ">=3.11"
docker = ">=6.1.3"
paramiko = ">=3.4.0"
overrides = ">=7.4.0"
PyYAML = { version = "!=6.0.0,!=5.4.0,!=5.4.1" }
rsa = ">=4.9"
pywinrm = ">=0.4.3"
aiohttp = ">=3.9.3"
python-certifi-win32 = ">=1.6.1"
certifi = ">=2024.2.2"
pyhostprep = ">=1.0.10"
psutil = ">=5.9.5"
six = ">=1.16.0"
libcapella = ">=1.0.9"

[tool.poetry.group.test.dependencies]
pytest = ">=5.0.0"
pytest-asyncio = ">=0.20.1"
pytest-rerunfailures = ">=10.0"
pytest-order = ">=1.2.0"

[tool.poetry.group.dev.dependencies]
bumpversion = "^0.6.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = "-rE --no-header -v -p no:warnings"
log_file = "pytest.log"
log_file_level = "DEBUG"
pythonpath = [
    ".",
    "tests"
]
testpaths = [
    "tests",
]
python_classes = [
    "Test*"
]
python_files = [
    "test_[0-9]*.py"
]
markers = [
    "cf_aws: marks a test as an AWS test",
    "cf_gcp: marks a test as a GCP test",
    "cf_azure: marks a test as a Azure test",
    "cf_docker: marks a test as a Docker test",
    "cf_capella: marks a test as a Capella test",
    "cf_columnar: marks a test as a Columnar test",
    "cf_windows: marks a test as a Windows safe test",
    "cf_posix: marks a test as a macOS or Linux safe test",
    "cf_cli: marks a test as a CLI simulation test"
]
